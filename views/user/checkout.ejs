<%- include("../../views/partials/user/header") %>
<style>

.coupon-card {
        width: 140px; /* Set width for the coupon card */
        height: auto; /* Height adjusts based on content */
        border: 1px solid #007bff; /* Blue border */
        border-radius: 8px; /* Rounded corners */
        padding: 5px; /* Reduced padding inside the card */
        margin: 5px; /* Reduced margin between cards */
        background-color: #ffffff; /* White background for the card */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Subtle shadow */
        transition: transform 0.2s; /* Animation effect */
        position: relative; /* Position relative for the button */
    }

    .coupon-card:hover {
        transform: translateY(-2px); /* Lift effect on hover */
    }

    .coupon-name {
        font-weight: bold;
        color: #343a40; /* Dark gray for coupon name */
        margin: 0; /* Remove default margin */
        font-size: 1em; /* Standard font size for coupon name */
    }

    .discount {
        font-size: 0.9em; /* Slightly smaller font size for discount */
        color: #28a745; /* Green color for discount */
        margin: 3px 0; /* Space above and below discount */
    }

    .copy-button {
        position: absolute; /* Absolute positioning */
        top: 5px; /* Position from the top */
        right: 5px; /* Position from the right */
        cursor: pointer; /* Change cursor to pointer */
        background-color: #6c757d; /* Standard gray color */
        border: none; /* No border */
        color: white; /* White text color */
        padding: 3px 6px; /* Smaller padding for the button */
        border-radius: 5px; /* Rounded button */
        font-size: 0.7em; /* Smaller font size for button text */
        transition: background-color 0.3s; /* Transition for hover effect */
    }

    .copy-button:hover {
        background-color: #5a6268; /* Darker gray on hover */
    }

    .coupon-container {
        display: flex; /* Use flexbox for container */
        flex-wrap: wrap; /* Allow wrapping to the next line */
        justify-content: flex-start; /* Align items to the start */
    }
</style>

<section class="ftco-section" style="background-color: white;">
    <div class="container">
        <div class="row justify-content-center">
            <!-- Left Side: Checkout Details -->
            <div class="col-md-6 ">
                <form action="#" class="billing-form" id="checkoutForm">
                    <h3 class="mb-4 billing-heading" style="font-size: 1.25rem;">Checkout</h3>

                    <!-- Existing Address Section -->
                    <div class="form-group mt-3">
                        <label for="existingAddresses" style="font-size: 0.85rem;">Select Existing Address</label>
                        <% if (addresses && addresses.length > 0) { %>
                            <select id="existingAddresses" class="form-control" style="font-size: 0.85rem;" onchange="fetchAddressDetails()">
                                <option value="">Select an address</option>
                                <% addresses.forEach(address => { %>
                                    <option value="<%= address.id %>">
                                        <%= address.name %> - <%= address.street %>, <%= address.city %>, <%= address.state %> <%= address.zipcode %>, <%= address.country %>
                                    </option>
                                <% }); %>
                            </select>
                        <% } else { %>
                            <p class="text-muted" style="font-size: 0.85rem;">No addresses exist.</p>
                        <% } %>
                    </div>

                    <!-- Add/Edit Address Button -->
                    <a href="/address">
                        <button type="button" class="btn btn-primary mt-3">Add/Edit Address</button>
                    </a>

                    <!-- Payment Method Section -->
                    <div class="mt-5">
                        <h3 class="billing-heading mb-4" style="font-size: 1.1rem;">Payment Method</h3>
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="radio">
                                    <label style="font-size: 0.85rem;">
                                        <input type="radio" name="paymentMethod" value="Cash On Delivery" class="mr-2" required> Cash On Delivery
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="radio">
                                    <label style="font-size: 0.85rem;">
                                        <input type="radio" name="paymentMethod" value="Razorpay" class="mr-2" required> Razorpay
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="radio">
                                    <label style="font-size: 0.85rem;">
                                        <input type="radio" name="paymentMethod" value="wallet" class="mr-2" required> Wallet
                                    </label>
                                </div>
                            </div>
                        </div>
                        <p>
                            <button id="placeOrderBtn" type="button" class="btn btn-primary" style="width: 200px; padding: 10px 20px;">Place an order</button>
                        </p>
                    </div>
                </form>
            </div>

            <!-- Right Side: Coupon Code Section and Your Order -->
            <div class="col-md-6">
                <!-- Coupon Code Section -->
                <div class="coupon-code bg-light p-3 mb-4" style="box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1); font-family: Arial, sans-serif;">
                    <h5 class="billing-heading mb-3" style="font-size: 1.1rem;">Coupon Code</h5>

                    <% if (!userCart.couponRedeemed.status) { %>
                        <a href="#" id="checkCoupons" style="font-size: 0.85rem; color: blue; cursor: pointer;" onclick="toggleCoupons()">check available coupons</a>

                        <!-- Collapse for available coupons -->
                        <div id="availableCoupons" class="collapse mt-2">
                            <div class="card card-body">
                                <p><strong>Available Coupons:</strong></p>
                                <div class="coupon-container"> <!-- Flex container for coupons -->
                                    <% if (coupons && coupons.length > 0) { %>
                                        <% coupons.forEach(coupon => { %>
                                            <div class="coupon-card">
                                                <button class="btn copy-button" onclick="copyToClipboard('<%= coupon.name %>')">Copy</button>
                                                <p class="coupon-name"><%= coupon.name %></p>
                                                <p class="discount">UP TO <%= coupon.discount %>% OFF</p>
                                            </div>
                                        <% }); %>
                                    <% } else { %>
                                        <p>No available coupons.</p>
                                    <% } %>
                                </div>
                            </div>
                        </div>

                        <div class="input-group mt-2">
                            <input type="text" id="couponInput" class="form-control" placeholder="Enter your coupon code" oninput="this.value = this.value.toUpperCase();">
                            <div class="input-group-append">
                                <button class="btn btn-primary" type="button" id="applyCoupon">APPLY</button>
                            </div>
                        </div>
                    <% } else { %>
                        <div id="appliedCouponSection" style="display: block; margin-top: 10px;">
                            <p>You have saved a coupon of <strong id="appliedCouponName"><%= couponName %></strong> with a discount of <strong id="appliedCouponOffer" style="color: #28a745;">₹<%= userCart.discount %></strong></p>
                            <button class="btn btn-outline-danger" id="removeCoupon">REMOVE</button>
                        </div>
                    <% } %>

                    <div id="toast" style="display: none; position: fixed; top: 20px; right: 20px; background-color: #28a745; color: white; padding: 10px; border-radius: 5px; z-index: 1000;">
                        Coupon code copied to clipboard!
                    </div>

                    <!-- Line Separator with Drop Shadow -->
                    <div class="separator" style="border-top: 1px solid #ddd; box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1); margin-bottom: 20px;"></div>

                    <!-- Your Order Section -->
                <div class="cart-detail bg-light p-4" style="box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);">
                    <h3 class="billing-heading mb-4" style="font-size: 1.25rem;">Your Order</h3>
                    <div class="border p-3 mb-4">
                        <ul class="list-unstyled">
                            <% cartItems.forEach(item => { %>
                                <li class="d-flex justify-content-between align-items-center mb-2" style="font-size: 0.85rem;">
                                    <strong><%= item.productName %> * <%= item.quantity %></strong> <span>₹<%= item.totalPrice %></span>
                                </li>
                            <% }); %>
                        </ul>

                        <!-- Cart Subtotal -->
                        <div class="mt-4">
                            <h5 class="d-flex justify-content-between align-items-center" style="font-size: 0.85rem;">
                                <span>Cart Subtotal</span>
                                <span>₹<%= userCart.cartTotal %></span>
                            </h5>

                            <!-- Coupon Offer (Default: None) -->
                            <h5 class="d-flex justify-content-between align-items-center" style="font-size: 0.85rem;">
                                <span>Coupon Offer</span>
                                <span style="color: green;">₹<%= userCart.discount %></span>
                            </h5>

                            <!-- Order Total (Same as Cart Subtotal for now) -->
                            <h5 class="d-flex justify-content-between align-items-center" style="font-size: 0.85rem;">
                                <span>Order Total</span>
                                <span>₹<%= userCart.cartTotal %></span>
                            </h5>

                            <!-- Delivery Charge (Default: 0) -->
                            <h5 class="d-flex justify-content-between align-items-center" style="font-size: 0.85rem;">
                                <span>Delivery Charge</span>
                                <span  style="color: green;" id="deliveryCharge">0</span>
                            </h5>
                        </div>

                        <!-- Final Total -->
                        <div class="d-flex justify-content-between mt-2">
                            <strong>Total:</strong>
                            <span id="finalAmount">₹<%= userCart.finalAmount %></span>
                        </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>


<script>
    document.getElementById('placeOrderBtn').addEventListener('click', async () => {
        // Retrieve selected address and payment method
        const selectedAddress = document.getElementById('existingAddresses').value;
        const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked');

        // Validate payment method selection
        if (!paymentMethod) {
            toastr.error('Please select a payment method.', "Error");
            return;
        }

        const paymentMethodValue = paymentMethod.value;

        // Validate address selection
        if (!selectedAddress) {
            toastr.error('Please select an address.', "Error");
            return;
        }

        // Prepare order data
        const orderData = {
            addressId: selectedAddress,
            paymentMethod: paymentMethodValue,
        };
        console.log('Order Data:', orderData);

        // PLACE ORDER
        $.ajax({
            url: '/cart/checkout/place-order',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(orderData),
            success: function(responseData) {
                // Check if payment method is Razorpay
                if (paymentMethodValue === 'Razorpay') {
                    const options = {
                        key: 'rzp_test_HSlU3uymqrTahm',
                        amount: responseData.order.finalAmount * 100, 
                        currency: 'INR',
                        name: 'VocalGear',
                        description: 'Order ID: ' + responseData.order._id,
                        order_id: responseData.razorpayOrderId,

                        // Success handler
                        handler: function(response) {
                            // On successful payment, send payment details for verification
                            $.ajax({
                                url: '/cart/checkout/verify-payment',
                                type: 'POST',
                                contentType: 'application/json',
                                data: JSON.stringify({
                                    razorpay_order_id: response.razorpay_order_id,
                                    razorpay_payment_id: response.razorpay_payment_id,
                                    razorpay_signature: response.razorpay_signature
                                }),
                                success: function(verifyResponse) {
                                    if (verifyResponse.success) {
                                        Swal.fire({
                                            title: 'Success!',
                                            text: 'Payment verified! Your order has been placed.',
                                            icon: 'success',
                                            confirmButtonText: 'Okay'
                                        }).then(() => {
                                            window.location.href = '/orders';
                                        });
                                    } else {
                                        Swal.fire({
                                            title: 'Verification Failed',
                                            text: 'Payment verification failed. Please contact support.',
                                            icon: 'error',
                                            confirmButtonText: 'Okay'
                                        });
                                    }
                                },
                                error: function(xhr) {
                                    Swal.fire({
                                        title: 'Verification Error',
                                        text: 'An error occurred while verifying payment. Please contact support.',
                                        icon: 'error',
                                        confirmButtonText: 'Okay'
                                    });
                                }
                            });
                        },
                        // Failure or cancellation handler
                        modal: {
                            ondismiss: function() {
                                $.ajax({
                                    url: '/cart/checkout/verify-payment',
                                    type: 'POST',
                                    contentType: 'application/json',
                                    data: JSON.stringify({
                                        razorpay_order_id: responseData.razorpayOrderId,
                                        status: 'cancelled' 
                                    }),
                                    complete: function() {
                                        // Redirect to /orders page after cancellation
                                        window.location.href = '/orders';
                                    },
                                    error: function(xhr) {
                                        console.error('Error updating payment cancellation:', xhr);
                                        // Even if there's an error, redirect the user
                                        window.location.href = '/orders';
                                    }
                                });
                            }
                        },

                        prefill: {
                            name: '',   
                            email: '',
                            contact: ''
                        },
                        theme: {
                            color: '#F37254'
                        }
                    };

                    // Initialize and open Razorpay payment modal
                    const razorpay = new Razorpay(options);
                    razorpay.open();
                } else {
                    // Handle other payment methods
                    Swal.fire({
                        title: 'Success!',
                        text: responseData.message || 'Your order has been placed successfully!',
                        icon: 'success',
                        confirmButtonText: 'Okay'
                    }).then(() => {
                        window.location.href = '/orders';
                    });
                }
            },
            error: function(xhr) {
                console.error('Error placing order:', xhr);
                Swal.fire({
                    title: 'Order Error',
                    text: xhr.responseJSON.message || 'An error occurred while placing the order.',
                    icon: 'error',
                    confirmButtonText: 'Okay'
                });
            }
        });
    });
</script>


<!-- JavaScript to handle the apply logic and toggle coupon display -->
<script>
  $(document).ready(function() {
            $('#applyCoupon').on('click', function() {
                var couponInput = $('#couponInput').val().trim(); 
                if (couponInput) {
                    console.log('Applied Coupon:', couponInput);

                    axios.post('/apply-coupon', { couponCode: couponInput })
                        .then(function(response) {
                            toastr.success('Coupon applied successfully!');
                            window.location.reload()
                            console.log('Server response:', response.data);
                        })
                        .catch(function(error) {
                            console.error('Error applying coupon:', error);
                            if (error.response && error.response.data && error.response.data.message) {
                            toastr.error(error.response.data.message); 
                            } else {
                            toastr.error('Failed to apply coupon. Please try again.');
                            }
                        });

                    $('#couponInput').val('');
                } else {
                    toastr.options.timeOut = 1200; 
                    toastr.error('Please enter a coupon code before applying.'); 
                }
            });
        });

    function toggleCoupons() {
        var couponsDiv = document.getElementById('availableCoupons');
        var checkCouponsLink = document.getElementById('checkCoupons');

        if (couponsDiv.classList.contains('show')) {
            couponsDiv.classList.remove('show');
            checkCouponsLink.textContent = 'check available coupons';
        } else {
            couponsDiv.classList.add('show');
            checkCouponsLink.textContent = 'hide available coupons';
        }
    }

    //copyToClipboard 
    function copyToClipboard(couponCode) {
        const tempInput = document.createElement('input');
        tempInput.value = couponCode;
        document.body.appendChild(tempInput);
        navigator.clipboard.writeText(tempInput.value)
            .then(() => {
                const toast = document.getElementById("toast");
                toast.style.display = "block";
                setTimeout(() => {
                    toast.style.display = "none"; 
                }, 2000);
            })
            .catch(err => {
                console.error('Failed to copy: ', err);
            });
        document.body.removeChild(tempInput);
    }


    //Delete Coupon
    $('#removeCoupon').on('click', function() { 
        axios.delete('/delete-coupon')
        .then(function(response) {
            toastr.success('Coupon removed successfully');
            window.location.reload();
            console.log('Server response:', response.data);
         })
         .catch(function(error) {
                console.error('Error applying coupon:', error);
            if (error.response && error.response.data && error.response.data.message) {
                toastr.error(error.response.data.message); 
            }
        });
    });

    //Select addresses
    $(document).ready(function() {
    $('#existingAddresses').on('change', function() {
        const selectedAddressId = $(this).val();

        // Check if a valid address is selected
        if (selectedAddressId) {
            axios.get('/cart/checkout', {
                params: { id: selectedAddressId }
            })
            .then(function(response) {
                const deliveryCharge = response.data.deliveryCharge ? response.data.deliveryCharge : 0
                const finalAmount = response.data.finalAmount;
                $('#deliveryCharge').text(deliveryCharge);
                $('#finalAmount').text(finalAmount)
                console.log('Address details:', response.data);
            })
            .catch(function(error) {
                console.error('Error fetching address details:', error);
            });
        }
    });
});


</script>


<%- include("../../views/partials/user/footer") %>
