<%- include("../../views/partials/admin/header") %>

<style>
  /* Reset some default styles for a more consistent look */
  body {
    margin: 0;
    font-family: 'Arial', sans-serif; /* Updated font for better readability */
    background-color: #f9f9f9; /* Light background for contrast */
  }

  .dashboard-container {
    width: 100%;
    padding: 20px; /* Added padding for better spacing */
    margin: 0 auto; /* Centering the dashboard */
  }

  .dashboard-header {
    display: flex;
    justify-content: start;
    align-items: center;
    padding: 1rem 0;
    border-bottom: 2px solid #ddd; /* Thicker border for emphasis */
  }

  h1.h3 {
    margin: 0; /* Remove margin for uniformity */
  }

  /* Card Styles */
  .card {
    border-radius: 15px; /* Softer corners */
    color: white;
    transition: transform 0.2s, box-shadow 0.2s; /* Added transition for hover effects */
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1); /* Soft shadow for depth */
  }

  .card:hover {
    transform: translateY(-5px); /* Lift effect on hover */
    box-shadow: 0 6px 30px rgba(0, 0, 0, 0.2); /* Enhanced shadow on hover */
  }

  /* Reverting back to original colors */
  .sales-count-card {
    background: linear-gradient(135deg, #c1c5d9, #5a7f66, #3b3b3b); /* Original color */
  }

  .order-amount-card {
    background: linear-gradient(135deg, #a3c1e0, #4b8da8, #2f4c57); /* Original color */
  }

  .discount-card {
    background: linear-gradient(135deg, #d4c300, #7d5c2c, #3e3b3b); /* Original color */
  }

  .card-body {
    padding: 20px; /* Increased padding for better spacing */
    text-align: center;
  }

  .report-generator {
    max-width: 400px; /* Increased width for better usability */
    padding: 20px;
    border-radius: 15px; /* Softer corners */
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    background-color: #ffffff;
    margin-top: 20px; /* Increased margin for separation */
  }

  .report-generator h1 {
    font-size: 1.5rem; /* Larger font for better visibility */
    font-weight: bold;
    margin-bottom: 15px;
  }

  .report-generator select,
  .report-generator button {
    width: 100%;
    padding: 12px; /* Increased padding for better clickability */
    border-radius: 5px;
    border: 1px solid #ddd;
    font-size: 1rem; /* Slightly larger font */
    margin-top: 10px;
    transition: border 0.3s; /* Smooth transition for focus effects */
  }

  .report-generator select:focus,
  .report-generator button:focus {
    border-color: #007bff; /* Highlight on focus */
    outline: none; /* Remove default outline */
  }

  .report-generator button {
    background-color: #007bff; /* Blue button */
    color: white;
    font-weight: bold;
    border: none;
    transition: background-color 0.3s ease, transform 0.2s; /* Smooth transitions */
  }

  .report-generator button:hover {
    background-color: #0056b3; /* Darker blue on hover */
    transform: translateY(-2px); /* Lift effect on hover */
  }

  .sales-report-section {
    display: none; /* Hidden by default */
    margin-top: 30px; /* Increased margin for separation */
  }

  .dashboard-title {
    font-size: 1.5rem;
    margin-bottom: 15px;
    color: #333; /* Darker title for contrast */
  }

  .button-group {
    margin-top: 20px; /* Increased margin for separation */
  }

  .button-group .btn {
    width: 48%;
    margin-right: 2%;
    transition: transform 0.2s; /* Transition for hover effects */
  }

  .button-group .btn:hover {
    transform: translateY(-2px); /* Lift effect on hover */
  }

  .button-group .btn:last-child {
    margin-right: 0;
  }
  .best-selling-container {
    display: flex;
    gap: 10px;
    justify-content: center;
    align-items: center;
    flex-wrap: nowrap;               /* Prevent wrapping on larger screens */
}

.stat-box {
    padding: 15px 25px;
    background: linear-gradient(45deg, #ffdd57, #ffac33);
    border-radius: 8px;
    color: #fff;
    font-weight: bold;
    transition: transform 0.3s;
    cursor: pointer;
    width: 500px;                    /* Set width to 500px */
    min-width: 300px;                /* Ensure a minimum width */
    max-width: 500px;                /* Limit the maximum width */
    text-align: center;
    box-sizing: border-box;
    white-space: nowrap;             /* Prevent text from wrapping */
    overflow: hidden;                /* Hide overflow if text is too long */
    text-overflow: ellipsis;         /* Add ellipsis if text is too long */
}

.stat-box-4 {
    background: linear-gradient(45deg, #ffdd57, #ffac33); /* Yellow-orange gradient */
}

.stat-box-5 {
    background: linear-gradient(45deg, #4caf50, #2e7d32); /* Green gradient */
}

/* Hover effect without changing width */
.stat-box:hover {
    transform: scale(1.05);
}

@media (max-width: 1100px) {
    .best-selling-container {
        flex-wrap: wrap;          /* Allow items to stack on smaller screens */
    }
    .stat-box {
        width: 100%;              /* Full width on smaller screens */
        margin-bottom: 10px;      /* Space between boxes when stacked */
    }
}

.best-selling-section {
    margin-top: 30px;
    padding: 15px;
    background-color: #ffffff;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

.best-selling-titles {
    display: flex;
    gap: 20px;
    margin-bottom: 20px;
}

.dashboard-title {
    padding: 10px 20px;
    cursor: pointer;
    border-bottom: 3px solid transparent;
    color: #666;
    transition: all 0.3s ease;
}

.dashboard-title.active {
    color: #2563eb;
    border-bottom-color: #2563eb;
}


.best-selling-section {
    margin-top: 30px;
    padding: 20px;
    background-color: #ffffff;
    border-radius: 16px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
}

.best-selling-titles {
    display: flex;
    gap: 15px;
    margin-bottom: 25px;
    padding: 5px;
    background-color: #f1f5f9;
    border-radius: 12px;
    padding: 8px;
}

.dashboard-title {
    flex: 1;
    padding: 12px 20px;
    cursor: pointer;
    background-color: transparent;
    border-radius: 8px;
    color: #64748b;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    text-align: center;
    font-size: 0.95rem;
    font-weight: 600;
    user-select: none;
}

.dashboard-title:hover {
    color: #2563eb;
    background-color: rgba(37, 99, 235, 0.05);
}

.dashboard-title.active {
    color: #2563eb;
    background-color: white;
    box-shadow: 0 4px 12px rgba(37, 99, 235, 0.1);
    transform: translateY(-1px);
}

.best-selling-products-container,
.best-selling-brands-container {
  display: none;
  flex-direction: column;
  gap: 12px;
  padding: 10px 5px;
  animation: fadeIn 0.4s ease;
}

@keyframes fadeIn {
  from { 
    opacity: 0; 
    transform: translateY(-8px); 
  }
  to { 
    opacity: 1; 
    transform: translateY(0); 
  }
}

.product-item,
.brand-item {
  display: flex;
  align-items: center; /* Center align items vertically */
  justify-content: space-between; /* Ensure proper space distribution */
  padding: 16px 20px;
  background: linear-gradient(135deg, #f8fafc, #f1f5f9);
  border-radius: 12px;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  border: 1px solid transparent;
}

.product-item:hover,
.brand-item:hover {
  transform: translateY(-3px) scale(1.01);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
  background: linear-gradient(135deg, #ffffff, #f8fafc);
  border-color: #e2e8f0;
}

.product-image {
  width: 40px;
  height: 40px;
  object-fit: cover;
  margin-right: 10px;
}

.product-info {
  display: flex; /* Change to flex to allow items in this div to be in a row */
  flex-grow: 1; /* Allow this div to grow to fill space */
  justify-content: space-between; /* Ensure spacing between product name and sales */
  align-items: center; /* Center align vertically */
}

.product-name {
  color: #1e293b;
  font-weight: 500;
  font-size: 0.95rem;
}

.product-sales {
  color: #64748b;
  background-color: #f1f5f9;
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 0.85rem;
  font-weight: 500;
  transition: all 0.3s ease;
}

.product-item:hover .product-sales {
  background-color: #2563eb;
  color: white;
}

.active-list {
  display: flex !important;
}

.brand-name,
.brand-sales {
  color: #1e293b;
  font-weight: 500;
  font-size: 0.95rem;
}

.brand-sales {
  background-color: #f1f5f9;
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 0.85rem;
  font-weight: 500;
  transition: all 0.3s ease;
}

.brand-item:hover .brand-sales {
  background-color: #2563eb;
  color: white;
}


</style>




<div class="dashboard-container">
  <div class="row" style="margin: 0;">
    <!-- Dashboard Heading -->
    <div class="dashboard-header">
      <h1 class="h3">Dashboard</h1>
    </div>
    <div class="container mt-4">
      <h1>Dashboard</h1>
      <div class="row">
          <!-- Sales Count -->
          <div class="col-md-4 mb-3">
              <div class="card sales-count-card">
                  <div class="card-body">
                      <h5 style="font-size: 0.75rem; margin-bottom: 0.3rem;">Overall Sales Count</h5>
                      <h3 style="font-size: 1.3rem; font-weight: bold;"><%= stats.salesCount %></h3>
                  </div>
              </div>
          </div>

          <!-- Order Amount -->
          <div class="col-md-4 mb-3">
              <div class="card order-amount-card">
                  <div class="card-body">
                      <h5 style="font-size: 0.75rem; margin-bottom: 0.3rem;">Overall Order Amount</h5>
                      <h3 style="font-size: 1.3rem; font-weight: bold;"><%= stats.totalOrderAmount.toFixed(2) %></h3>
                  </div>
              </div>
          </div>

          <!-- Discount -->
          <div class="col-md-4 mb-3">
              <div class="card discount-card">
                  <div class="card-body">
                      <h5 style="font-size: 0.75rem; margin-bottom: 0.3rem;">Overall Discount</h5>
                      <h3 style="font-size: 1.3rem; font-weight: bold;"><%= stats.totalDiscount.toFixed(2) %></h3>
                  </div>
              </div>
          </div>
      </div>
  </div>


  <!-- Sales Report Generator Section -->
<div class="report-generator">
  <h1>Sales Report Generator</h1>
  <label for="reportType">Select Report Type:</label>
  <select id="reportType" name="reportType">
      <option value="">-- Select Report Type --</option>
      <option value="daily">Daily</option>
      <option value="weekly">Weekly</option>
      <option value="monthly">Monthly</option>
      <option value="yearly">Yearly</option>
  </select>
  <button type="button" id="generateReportButton">Generate Report</button>
</div>

<!-- Sales Report Section -->
<div id="reportTableContainer" class="sales-report-section" style="display: none;">
  <h3 class="dashboard-title">Sales Report</h3>
  <table id="reportTable" class="table table-striped table-bordered">
      <thead class="table-dark">
          <tr>
              <th>Order ID</th>
              <th>User</th>
              <th>Total Amount</th>
              <th>Discount</th>
              <th>Final Amount</th>
              <th>Status</th>
              <th>Payment</th>
              <th>Created At</th>
          </tr>
      </thead>
      <tbody id="reportData">

      </tbody>
  </table>
  <div class="button-group">
      <button id="downloadPdf" class="btn btn-primary downloadPdfbtn" style="display: none;">Download PDF</button>
      <button id="downloadExcel" class="btn btn-success downloadExcelbtn" style="display: none;">Download Excel</button>
  </div>
</div>

<!-- Sales Graph Section -->
<div class="sales-graph">
  <h3 class="dashboard-title">Sales Data Overview</h3>
  <canvas id="myChart" width="400" height="200"></canvas>
</div>

  <!-- Best Selling Section -->
<section class="best-selling-section">
    <div class="best-selling-container">
        <div class="stat-box stat-box-4" id="bestSellingProduct" role="button">
            Best-Selling Product: <strong id="bestSellingProductValue"><%= bestSellingProduct ? bestSellingProduct.productName : 'No Orders Available' %></strong>
        </div>
        <div class="stat-box stat-box-5" id="bestSellingBrand" role="button">
            Best-Selling Brand: <strong id="bestSellingBrandValue"> <%= bestSellingBrand ? bestSellingBrand.brandName : 'No Orders Available' %></strong>
        </div>
    </div>
</section>


<!-- Best Selling Section -->
<section class="best-selling-section">
  <div class="best-selling-titles">
    <h3 class="dashboard-title active" id="toggleProducts">Best Selling Products (Top <%= topProducts.length %>)</h3>
    <h3 class="dashboard-title" id="toggleBrands">Best Selling Brands (Top <%= topBrands.length %>)</h3>
  </div>
  <div class="best-selling-lists">
    <div class="best-selling-products-container active-list" id="productsList">
      <% if (topProducts && topProducts.length > 0) { %>
        <% topProducts.forEach(product => { %>
          <div class="product-item">
            <% if (product.ProductImage) { %>
              <img 
                src="/uploads/product-images/<%= product.ProductImage %>" 
                alt="<%= product.productName %>" 
                class="product-image"
              >
            <% } %>
            <div class="product-info">
              <span class="product-name"><%= product.productName %></span>
              <span class="product-sales">Sales: <%= product.totalSales %></span>
            </div>
          </div>
        <% }); %>
      <% } else { %>
        <div class="no-data">No product data available</div>
      <% } %>
    </div>

    <div class="best-selling-brands-container" id="brandsList">
      <% if (topBrands && topBrands.length > 0) { %>
        <% topBrands.forEach(brand => { %>
          <div class="brand-item">
            <span class="brand-name"><%= brand.brandName %></span>
            <span class="brand-sales">Sales: <%= brand.totalSales %></span>
          </div>
        <% }); %>
      <% } else { %>
        <div class="no-data">No brand data available</div>
      <% } %>
    </div>
  </div>
</section>



<div id="days" style="display: none;"><%- JSON.stringify(days) %></div>
<div id="pendings" style="display: none;"><%- JSON.stringify(pendingCountsArray) %></div>
<div id="shipped" style="display: none;"><%- JSON.stringify(shippedCountsArray) %></div>
<div id="delivered" style="display: none;"><%- JSON.stringify(deliveredCountsArray) %></div>


<!-- Chart.js Library -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.13/jspdf.plugin.autotable.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
<!-- Toastr CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<script>
  document.getElementById('generateReportButton').addEventListener('click', function() {
    const reportType = document.getElementById('reportType').value;
    const reportSection = document.getElementById('reportTableContainer');
    const downloadPdfButton = document.getElementById('downloadPdf');
    const downloadExcelButton = document.getElementById('downloadExcel');
    
    console.log(reportType);
    if (reportType) {
        reportSection.style.display = 'block';
        
        // Show download buttons
        downloadPdfButton.style.display = 'inline-block';
        downloadExcelButton.style.display = 'inline-block';


        fetch(`/admin/reports?reportType=${reportType}`)
            .then(response => response.json())
            .then(data => {
                const reportData = document.getElementById('reportData');
                reportData.innerHTML = ''; 
                data.forEach(order => {
                    const row = `
                        <tr>
                            <td>${order.orderId}</td>
                            <td>${order.userName}</td>
                            <td>${order.totalAmount.toFixed(2)}</td>
                            <td>${order.discount.toFixed(2)}</td>
                            <td>${order.finalAmount.toFixed(2)}</td>
                            <td>${order.status}</td>
                            <td>${order.paymentMethod}</td>
                            <td>${new Date(order.createdAt).toLocaleDateString()}</td>
                        </tr>
                    `;
                    reportData.innerHTML += row;


                });
            })
            .catch(error => console.error('Error fetching report data:', error));
    } else {
        toastr.info('Please select a report type.');
        reportSection.style.display = 'none';
        
        // Hide download buttons
        downloadPdfButton.style.display = 'none';
        downloadExcelButton.style.display = 'none';
    }
});

// PDF download logic
document.getElementById('downloadPdf').addEventListener('click', function() {
    const { jsPDF } = window.jspdf;
    const doc = new jsPDF();

    doc.setFontSize(12);
    doc.text("Sales Report", 14, 10);
    doc.autoTable({
        head: [['Order ID', 'User', 'Total Amount', 'Discount', 'Final Amount', 'Status', 'Payment', 'Created At']],
        body: Array.from(document.querySelectorAll('#reportData tr')).map(row => {
            return Array.from(row.querySelectorAll('td')).map(cell => cell.innerText);
        })
    });

    doc.save('sales-report.pdf');
});

// Excel download logic
document.getElementById('downloadExcel').addEventListener('click', function() {
    const workbook = XLSX.utils.book_new();
    const worksheetData = [];
    
    // Get header
    const headers = ['Order ID', 'User', 'Total Amount', 'Discount', 'Final Amount', 'Status', 'Payment', 'Created At'];
    worksheetData.push(headers);

    // Get rows data
    document.querySelectorAll('#reportData tr').forEach(row => {
        const rowData = Array.from(row.querySelectorAll('td')).map(cell => cell.innerText);
        worksheetData.push(rowData);
    });

    const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);
    XLSX.utils.book_append_sheet(workbook, worksheet, 'Sales Report');
    
    XLSX.writeFile(workbook, 'sales-report.xlsx');
});

</script>


<script>
const days = JSON.parse(document.getElementById('days').textContent);
const pendings = JSON.parse(document.getElementById('pendings').textContent);
const shipped = JSON.parse(document.getElementById('shipped').textContent);
const delivered = JSON.parse(document.getElementById('delivered').textContent);

// Generate the Chart
let delayed;
const data = {
    labels: days,
    datasets: [
        {
            label: "Pending",
            data: pendings,
            backgroundColor: 'rgba(255, 255, 0, 0.5)', // Original yellow color for pending
        },
        {
            label: "Shipped",
            data: shipped,
            backgroundColor: "rgba(135, 206, 235, 0.7)", // Light blue for shipped
        },
        {
            label: "Delivered",
            data: delivered,
            backgroundColor: "rgba(144, 238, 144, 0.7)", // Light green for delivered
        },
    ]
};

const config = {
    type: 'bar',
    data: data,
    options: {
        responsive: true,
        plugins: {
            legend: {
                position: 'top'
            },
            title: {
                display: true,
                text: 'Stacked Bar Chart with Delayed Animation'
            }
        },
        animation: {
            onComplete: () => {
                delayed = true;
            },
            delay: (context) => {
                let delay = 0;
                if (context.type === 'data' && context.mode === 'default' && !delayed) {
                    delay = context.dataIndex * 300 + context.datasetIndex * 100;
                }
                return delay;
            },
        },
        scales: {
            x: {
                stacked: true, // Enables stacking on the x-axis
            },
            y: {
                stacked: true, // Enables stacking on the y-axis
                beginAtZero: true
            }
        }
    }
};

// Render the chart
const myChart = new Chart(
    document.getElementById('myChart'),
    config
);

</script>


<script>
  document.getElementById('toggleProducts').addEventListener('click', function() {
      showTab('products');
  });
  
  document.getElementById('toggleBrands').addEventListener('click', function() {
      showTab('brands');
  });
  
  function showTab(tab) {
      // Hide all lists
      document.getElementById('productsList').classList.remove('active-list');
      document.getElementById('brandsList').classList.remove('active-list');
      
      // Remove active class from all titles
      document.getElementById('toggleProducts').classList.remove('active');
      document.getElementById('toggleBrands').classList.remove('active');
      
      if (tab === 'products') {
          document.getElementById('productsList').classList.add('active-list');
          document.getElementById('toggleProducts').classList.add('active');
      } else {
          document.getElementById('brandsList').classList.add('active-list');
          document.getElementById('toggleBrands').classList.add('active');
      }
  }
  </script>
  


<%- include("../../views/partials/admin/footer") %>
